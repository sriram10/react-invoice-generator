{"version":3,"sources":["fonts/Outfit.ttf","data/initialData.ts","styles/styles.ts","styles/compose.ts","components/EditableInput.tsx","components/EditableTextarea.tsx","components/EditableCalendarInput.tsx","hooks/useOnClickOutside.ts","components/EditableFileImage.tsx","components/Document.tsx","components/Page.tsx","components/View.tsx","components/Text.tsx","components/DownloadPDF.tsx","utils/utils.js","components/InvoicePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialProductLine","description","duration","hours","quantity","rate","initialInvoice","logo","logoWidth","title","companyName","name","companyAddress","companyAddress2","companyCountry","companyGstin","companyPan","companyEmail","companyPhone","billBy","billTo","clientName","clientAddress","clientAddress2","clientGstin","clientPan","clientEmail","clientPhone","clientCountry","invoiceTitleLabel","invoiceTitle","invoiceDateLabel","invoiceDate","invoiceDueDateLabel","invoiceDueDate","productLineDescription","productLineDuration","productLineHours","productLineQuantity","productLineQuantityRate","productLineQuantityAmount","productLines","subTotalLabel","taxLabel","totalLabel","totalWordsLabel","currency","notesLabel","notes","termLabel","term","accountNameLabel","accountNoLabel","bankNameLabel","bankIfscLabel","bankLabel","accountName","accountNo","bankName","bankIfsc","styles","dark","color","white","backgroundColor","borderRadius","flex","display","flexDirection","flexWrap","paddingRight","width","borderTop","row","border","marginTop","marginBottom","padding","paddingLeft","paddingTop","paddingBottom","right","textAlign","bold","fontWeight","fontSize","page","fontFamily","span","compose","classes","css","replace","split","forEach","className","undefined","Object","assign","EditableInput","placeholder","value","onChange","pdfMode","style","type","e","target","EditableTextarea","rows","minRows","EditableCalendarInput","selected","date","dateFormat","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","document","addEventListener","removeEventListener","EditableFileImage","onChangeImage","onChangeWidth","fileInput","useRef","widthWrapper","useState","isEditing","setIsEditing","handleUpload","click","maxWidth","src","alt","onClick","min","max","marks","100","150","200","250","included","step","defaultValue","tabIndex","accept","files","length","reader","FileReader","result","readAsDataURL","Document","children","Page","size","View","Text","Download","data","show","setShow","timeout","setTimeout","clearTimeout","fileName","toLowerCase","aria-label","formatCurrency","Intl","NumberFormat","maximumSignificantDigits","format","Font","register","family","require","InvoicePage","invoice","setInvoice","subTotal","setSubTotal","setSaleTax","Date","valueOf","setDate","getDate","handleChange","newInvoice","handleProductLineChange","index","map","productLine","i","newProductLine","includes","n","parseInt","toString","hoursNumber","rateNumber","match","taxRate","parseFloat","Array","isArray","rowColor","key","calculateAmount","filter","handleRemove","num","a","b","substr","str","Number","charAt","toUpperCase","slice","numInWords","toFixed","App","id","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8ca5f963.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Outfit.dac95be0.ttf\";","import { ProductLine, Invoice } from './types'\n\nexport const initialProductLine: ProductLine = {\n  description: '',\n  duration: '',\n  hours: '',\n  quantity: '1',\n  rate: '0',\n}\n\nexport const initialInvoice: Invoice = {\n  logo: '',\n  logoWidth: 110,\n  title: 'Invoice',\n  companyName: 'Pentafox Technologies Private Limited',\n  name: '',\n  companyAddress: '',\n  companyAddress2: '',\n  companyCountry: 'India',\n  companyGstin: '-',\n  companyPan: '-',\n  companyEmail: '-',\n  companyPhone: '-',\n  billBy: 'Billed By',\n  billTo: 'Billed To',\n  clientName: '',\n  clientAddress: '',\n  clientAddress2: '',\n  clientGstin: '-',\n  clientPan: '-',\n  clientEmail: '-',\n  clientPhone: '-',\n  clientCountry: 'United States',\n  invoiceTitleLabel: 'Invoice No',\n  invoiceTitle: '',\n  invoiceDateLabel: 'Invoice Date',\n  invoiceDate: '',\n  invoiceDueDateLabel: 'Due Date',\n  invoiceDueDate: '',\n  productLineDescription: 'Description',\n  productLineDuration: 'Duration',\n  productLineHours: 'Hours',\n  productLineQuantity: 'Qty',\n  productLineQuantityRate: 'Rate',\n  productLineQuantityAmount: 'Amount',\n  productLines: [\n    {\n      description: 'Brochure Design',\n      duration: '2',\n      hours: '2',\n      quantity: '2',\n      rate: '100',\n    },\n    { ...initialProductLine },\n    { ...initialProductLine },\n  ],\n  subTotalLabel: 'Sub Total',\n  taxLabel: 'Sale Tax (10%)',\n  totalLabel: 'Total',\n  totalWordsLabel: 'Total (in Words): ',\n  currency: '₹',\n  notesLabel: 'Bank Details',\n  notes: 'For any enquiry, reach out via email at YOUR_EMAIL, call on +91 98888 98888',\n  termLabel: 'Terms & Conditions',\n  term: 'Please make the payment by the due date.',\n\n  accountNameLabel: 'Account name',\n  accountNoLabel: 'Account No.',\n  bankNameLabel: 'Bank name',\n  bankIfscLabel: 'IFSC',\n\n  bankLabel: 'Bank Details',\n  accountName: '- ',\n  accountNo: '- ',\n  bankName: '- ',\n  bankIfsc: '- '\n}\n","import { CSSClasses } from '../data/types'\n\nconst colorDark = '#222'\nconst colorDark2 = '#666'\nconst colorGray = '#e3e3e3'\nconst colorWhite = '#fff'\nconst colorThemeDark = '#6539C0'\nconst colorThemeLight = '#EFEBF9'\n\nconst styles: CSSClasses = {\n  dark: {\n    color: colorDark,\n  },\n\n  white: {\n    color: colorWhite,\n  },\n\n  'bg-dark': {\n    backgroundColor: colorDark2,\n  },\n\n  'bg-gray': {\n    backgroundColor: colorGray,\n  },\n\n  'bg-theme-dark': {\n    backgroundColor: colorThemeDark,\n  },\n\n  'bg-theme-light': {\n    backgroundColor: colorThemeLight,\n  },\n\n  'theme-dark': {\n    color: colorThemeDark,\n  },\n\n  'theme-light': {\n    color: colorThemeLight,\n  },\n\n  'rad-sm': {\n    borderRadius: '4px',\n  },\n\n  flex: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n\n  'w-auto': {\n    flex: 1,\n    paddingRight: '8px',\n  },\n\n  'ml-30': {\n    flex: 1,\n  },\n\n  'w-100': {\n    width: '100%',\n  },\n\n  'w-75': {\n    width: '75%',\n  },\n\n  'w-70': {\n    width: '70%',\n  },\n\n  'w-50': {\n    width: '50%',\n  },\n\n  'w-55': {\n    width: '55%',\n  },\n\n  'w-45': {\n    width: '45%',\n  },\n\n  'w-60': {\n    width: '60%',\n  },\n\n  'w-40': {\n    width: '40%',\n  },\n\n  'w-48': {\n    width: '48%',\n  },\n\n  'w-30': {\n    width: '30%',\n  },\n\n  'w-25': {\n    width: '25%',\n  },\n\n  'w-17': {\n    width: '17%',\n  },\n\n  'w-18': {\n    width: '18%',\n  },\n\n  'w-10': {\n    width: '10%',\n  },\n\n  'w-5': {\n    width: '5%',\n  },\n\n  'bd-t': {\n    borderTop: `1px solid ${colorThemeLight}`,\n  },\n\n  row: {\n    border: `1px solid ${colorThemeLight}`,\n    borderTop: `0px`,\n  },\n\n  'mt-40': {\n    marginTop: '40px',\n  },\n\n  'mt-30': {\n    marginTop: '30px',\n  },\n\n  'mt-20': {\n    marginTop: '20px',\n  },\n\n  'mt-10': {\n    marginTop: '10px',\n  },\n\n  'mb-5': {\n    marginBottom: '5px',\n  },\n\n  'p-4-8': {\n    padding: '4px 8px',\n  },\n\n  'p-5': {\n    padding: '5px',\n  },\n\n  'pl-5': {\n    paddingLeft: '5px',\n  },\n\n  'p-10': {\n    padding: '10px',\n  },\n\n  'pt-10': {\n    paddingTop: '10px',\n  },\n\n  'pt-20': {\n    paddingTop: '20px',\n  },\n\n  'pt-30': {\n    paddingTop: '30px',\n  },\n\n  'pb-10': {\n    paddingBottom: '10px',\n  },\n\n  'pb-20': {\n    paddingBottom: '20px',\n  },\n\n  'pb-30': {\n    paddingBottom: '30px',\n  },\n\n  right: {\n    textAlign: 'right',\n  },\n\n  bold: {\n    fontWeight: 'bold',\n  },\n\n  'fs-14': {\n    fontSize: '14px',\n  },\n\n  'fs-16': {\n    fontSize: '16px',\n  },\n\n  'fs-20': {\n    fontSize: '20px',\n  },\n\n  'fs-45': {\n    fontSize: '45px',\n  },\n\n  page: {\n    fontFamily: 'Outfit',\n    fontSize: '13px',\n    color: '#555',\n    padding: '40px 35px',\n  },\n\n  span: {\n    padding: '4px 12px 4px 0',\n  },\n\n  logo: {\n    display: 'block',\n  }\n}\n\nexport default styles\n","import ReactPDF from '@react-pdf/renderer'\nimport styles from './styles'\n\nconst compose = (classes: string): ReactPDF.Styles => {\n  const css: ReactPDF.Styles = {}\n\n  const classesArray: string[] = classes.replace(/\\s+/g, ' ').split(' ')\n\n  classesArray.forEach((className) => {\n    if (typeof styles[className] !== undefined) {\n      Object.assign(css, styles[className])\n    }\n  })\n\n  return css\n}\n\nexport default compose\n","import React, { FC } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  onChange?: (value: string) => void\n  pdfMode?: boolean\n}\n\nconst EditableInput: FC<Props> = ({ className, placeholder, value, onChange, pdfMode }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <input\n          type=\"text\"\n          className={'input ' + (className ? className : '')}\n          placeholder={placeholder || ''}\n          value={value || ''}\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableInput\n","import React, { FC } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport { Text } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  onChange?: (value: string) => void\n  pdfMode?: boolean\n  rows?: number\n}\n\nconst EditableTextarea: FC<Props> = ({\n  className,\n  placeholder,\n  value,\n  onChange,\n  pdfMode,\n  rows,\n}) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <TextareaAutosize\n          minRows={rows || 1}\n          className={'input ' + (className ? className : '')}\n          placeholder={placeholder || ''}\n          value={value || ''}\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableTextarea\n","import React, { FC } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  value?: string\n  selected?: Date\n  onChange?: (date: Date | [Date, Date] | null) => void\n  pdfMode?: boolean\n}\n\nconst EditableCalendarInput: FC<Props> = ({ className, value, selected, onChange, pdfMode }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <DatePicker\n          className={'input ' + (className ? className : '')}\n          selected={selected}\n          onChange={onChange ? (date) => onChange(date) : (date) => null}\n          dateFormat=\"MMM dd, yyyy\"\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableCalendarInput\n","import { RefObject, useEffect } from 'react'\n\ntype AnyEvent = MouseEvent | TouchEvent\n\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: AnyEvent) => void,\n) {\n  useEffect(() => {\n    const listener = (event: AnyEvent) => {\n      const el = ref?.current\n\n      // Do nothing if clicking ref's element or descendent elements\n      if (!el || el.contains(event.target as Node)) {\n        return\n      }\n\n      handler(event)\n    }\n\n    document.addEventListener(`mousedown`, listener)\n    document.addEventListener(`touchstart`, listener)\n\n    return () => {\n      document.removeEventListener(`mousedown`, listener)\n      document.removeEventListener(`touchstart`, listener)\n    }\n\n    // Reload only if ref or handler changes\n  }, [ref, handler])\n}\n\nexport default useOnClickOutside\n","import React, { FC, useRef, useState } from 'react'\nimport Slider from 'rc-slider'\nimport { Image } from '@react-pdf/renderer'\nimport useOnClickOutside from '../hooks/useOnClickOutside'\nimport compose from '../styles/compose'\nimport 'rc-slider/assets/index.css'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  width?: number\n  onChangeImage?: (value: string) => void\n  onChangeWidth?: (value: number) => void\n  pdfMode?: boolean\n}\n\nconst EditableFileImage: FC<Props> = ({ className, placeholder, value, width, onChangeImage, onChangeWidth, pdfMode }) => {\n  const fileInput = useRef<HTMLInputElement>(null)\n  const widthWrapper = useRef<HTMLDivElement>(null)\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const marks = {\n    100: '100px',\n    150: '150px',\n    200: '200px',\n    250: '250px'\n  }\n\n  const handleClickOutside = () => {\n    if (isEditing) {\n      setIsEditing(false)\n    }\n  }\n\n  useOnClickOutside(widthWrapper, handleClickOutside)\n\n  const handleUpload = () => {\n    fileInput?.current?.click()\n  }\n\n  const handleChangeImage = () => {\n    if (fileInput?.current?.files) {\n      const files = fileInput.current.files\n\n      if (files.length > 0 && typeof onChangeImage === 'function') {\n        const reader = new FileReader()\n\n        reader.addEventListener('load', () => {\n          if (typeof reader.result === 'string') {\n            onChangeImage(reader.result)\n          }\n        })\n\n        reader.readAsDataURL(files[0])\n      }\n    }\n  }\n\n  const handleChangeWidth = (value: number) => {\n    if (typeof onChangeWidth === 'function') {\n      onChangeWidth(value)\n    }\n  }\n\n  const handleEdit = () => {\n    setIsEditing(!isEditing)\n  }\n\n  const clearImage = () => {\n    if (typeof onChangeImage === 'function') {\n      onChangeImage('')\n    }\n  }\n\n  if (pdfMode) {\n    if (value) {\n      return (\n        <Image\n          style={{...compose(`image ${className ? className : ''}`), maxWidth: width}}\n          src={value}\n        />\n      )\n    } else {\n      return <></>\n    }\n  }\n\n  return (\n    <div className={`image ${value ? 'mb-5' : ''} ${className ? className : ''}`}>\n      {!value ? (\n        <button\n          type=\"button\"\n          className=\"image__upload\"\n          onClick={handleUpload}\n        >\n          {placeholder}\n        </button>\n      ) : (\n        <>\n          <img\n            src={value}\n            className=\"image__img\"\n            alt={placeholder}\n            style={{ maxWidth: width || 100}}\n          />\n\n          <button\n            type=\"button\"\n            className=\"image__change\"\n            onClick={handleUpload}\n          >\n            Change Image\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"image__edit\"\n            onClick={handleEdit}\n          >\n            Resize Image\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"image__remove\"\n            onClick={clearImage}\n          >\n            Remove\n          </button>\n\n          {isEditing && (\n            <div ref={widthWrapper} className=\"image__width-wrapper\">\n              <Slider min={100} max={250} marks={marks} included={false} step={1} onChange={handleChangeWidth} defaultValue={width || 100} />\n            </div>\n          )}\n        </>\n      )}\n\n      <input\n        ref={fileInput}\n        tabIndex={-1}\n        type=\"file\"\n        accept=\"image/*\"\n        className=\"image__file\"\n        onChange={handleChangeImage}\n      />\n    </div>\n  )\n}\n\nexport default EditableFileImage\n","import React, { FC } from 'react'\nimport { Document as PdfDocument } from '@react-pdf/renderer'\n\ninterface Props {\n  pdfMode?: boolean\n}\n\nconst Document: FC<Props> = ({ pdfMode, children }) => {\n  return <>{pdfMode ? <PdfDocument>{children}</PdfDocument> : <>{children}</>}</>\n}\n\nexport default Document\n","import React, { FC } from 'react'\nimport { Page as PdfPage } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n}\n\nconst Page: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfPage size=\"A4\" style={compose('page ' + (className ? className : ''))}>\n          {children}\n        </PdfPage>\n      ) : (\n        <div className={'page ' + (className ? className : '')}>{children}</div>\n      )}\n    </>\n  )\n}\n\nexport default Page\n","import React, { FC } from 'react'\nimport { View as PdfView } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n}\n\nconst View: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfView style={compose('view ' + (className ? className : ''))}>{children}</PdfView>\n      ) : (\n        <div className={'view ' + (className ? className : '')}>{children}</div>\n      )}\n    </>\n  )\n}\n\nexport default View\n","import React, { FC } from 'react'\nimport { Text as PdfText } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n  children?: string\n}\n\nconst Text: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfText style={compose('span ' + (className ? className : ''))}>{children}</PdfText>\n      ) : (\n        <span className={'span ' + (className ? className : '')}>{children}</span>\n      )}\n    </>\n  )\n}\n\nexport default Text\n","import React, { FC, useEffect, useState } from 'react'\nimport { PDFDownloadLink } from '@react-pdf/renderer'\nimport { Invoice } from '../data/types'\nimport InvoicePage from './InvoicePage'\n\ninterface Props {\n  data: Invoice\n}\n\nconst Download: FC<Props> = ({ data }) => {\n  const [show, setShow] = useState<boolean>(false)\n\n  useEffect(() => {\n    setShow(false)\n\n    const timeout = setTimeout(() => {\n      setShow(true)\n    }, 500)\n\n    return () => clearTimeout(timeout)\n  }, [data])\n\n  return (\n    <div className={'download-pdf ' + (!show ? 'loading' : '')} title=\"Save PDF\">\n      {show && (\n        <PDFDownloadLink\n          document={<InvoicePage pdfMode={true} data={data} />}\n          fileName={`${data.invoiceTitle ? data.invoiceTitle.toLowerCase() : 'invoice'}.pdf`}\n          aria-label=\"Save PDF\"\n        ></PDFDownloadLink>\n      )}\n    </div>\n  )\n}\n\nexport default Download\n","export const numInWords = (num) => {\n  let a = ['','one ','two ','three ','four ', 'five ','six ','seven ','eight ','nine ','ten ','eleven ','twelve ','thirteen ','fourteen ','fifteen ','sixteen ','seventeen ','eighteen ','nineteen '];\n  let b = ['', '', 'twenty','thirty','forty','fifty', 'sixty','seventy','eighty','ninety'];\n  if ((num = num.toString()).length > 9) return 'overflow';\n  let n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\n  if (!n) return; var str = '';\n  str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'crore ' : '';\n  str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'lakh ' : '';\n  str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'thousand ' : '';\n  str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'hundred ' : '';\n  str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + ' ' : '';\n  const result = str.charAt(0).toUpperCase() + str.slice(1);\n  return result !== '' ? result + ' only' : '';\n}\n\nexport const formatCurrency = (value) => {\n  const money = new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 8 }).format(value)\n  return money;\n}","import React, { FC, useState, useEffect } from 'react'\nimport { Invoice, ProductLine } from '../data/types'\nimport { initialInvoice, initialProductLine } from '../data/initialData'\nimport EditableInput from './EditableInput'\n// import EditableSelect from './EditableSelect'\nimport EditableTextarea from './EditableTextarea'\nimport EditableCalendarInput from './EditableCalendarInput'\nimport EditableFileImage from './EditableFileImage'\n// import countryList from '../data/countryList'\nimport Document from './Document'\nimport Page from './Page'\nimport View from './View'\nimport Text from './Text'\nimport { Font } from '@react-pdf/renderer'\nimport Download from './DownloadPDF'\nimport format from 'date-fns/format'\nimport { formatCurrency, numInWords } from '../utils/utils'\n\nFont.register({\n  family: 'Outfit',\n  src: require('../fonts/Outfit.ttf')\n})\n\ninterface Props {\n  data?: Invoice\n  pdfMode?: boolean\n}\n\nconst InvoicePage: FC<Props> = ({ data, pdfMode }) => {\n  const [invoice, setInvoice] = useState<Invoice>(data ? { ...data } : { ...initialInvoice })\n  const [subTotal, setSubTotal] = useState<number>()\n  const [saleTax, setSaleTax] = useState<number>()\n\n  const dateFormat = 'MMM dd, yyyy'\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date()\n  const invoiceDueDate =\n    invoice.invoiceDueDate !== ''\n      ? new Date(invoice.invoiceDueDate)\n      : new Date(invoiceDate.valueOf())\n\n  if (invoice.invoiceDueDate === '') {\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 30)\n  }\n\n  const handleChange = (name: keyof Invoice, value: string | number) => {\n    if (name !== 'productLines') {\n      const newInvoice = { ...invoice }\n\n      if (name === 'logoWidth' && typeof value === 'number') {\n        newInvoice[name] = value\n      } else if (name !== 'logoWidth' && typeof value === 'string') {\n        newInvoice[name] = value\n      }\n\n      setInvoice(newInvoice)\n    }\n  }\n\n  const handleProductLineChange = (index: number, name: keyof ProductLine, value: string) => {\n    const productLines = invoice.productLines.map((productLine, i) => {\n      if (i === index) {\n        const newProductLine = { ...productLine }\n\n        if (name === 'description' || name === 'duration') {\n          newProductLine[name] = value\n        } else {\n          if (\n            value[value.length - 1] === '.' ||\n            (value[value.length - 1] === '0' && value.includes('.'))\n          ) {\n            newProductLine[name] = value\n          } else {\n            const n = parseInt(value)\n\n            newProductLine[name] = (n ? n : 0).toString()\n          }\n        }\n\n        return newProductLine\n      }\n\n      return { ...productLine }\n    })\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleRemove = (i: number) => {\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i)\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleAdd = () => {\n    const productLines = [...invoice.productLines, { ...initialProductLine }]\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const calculateAmount = (hours: string, rate: string) => {\n    const hoursNumber = parseInt(hours, 10)\n    const rateNumber = parseInt(rate, 10)\n    const amount = hoursNumber && rateNumber ? hoursNumber * rateNumber : 0\n\n    return formatCurrency(amount)\n  }\n\n  useEffect(() => {\n    let subTotal = 0\n\n    invoice.productLines.forEach((productLine) => {\n      const hoursNumber = parseInt(productLine.hours)\n      const rateNumber = parseInt(productLine.rate)\n      const amount = hoursNumber && rateNumber ? hoursNumber * rateNumber : 0\n\n      subTotal += amount\n    })\n\n    setSubTotal(subTotal)\n  }, [invoice.productLines])\n\n  useEffect(() => {\n    const match = invoice.taxLabel.match(/(\\d+)%/)\n    const taxRate = match ? parseFloat(match[1]) : 0\n    const saleTax = subTotal ? (subTotal * taxRate) / 100 : 0\n\n    setSaleTax(saleTax)\n  }, [subTotal, invoice.taxLabel])\n\n  return (\n    <Document pdfMode={pdfMode}>\n      <Page className=\"invoice-wrapper\" pdfMode={pdfMode}>\n        {!pdfMode && <Download data={invoice} />}\n\n        <View className=\"flex\" pdfMode={pdfMode}>\n          <View className=\"w-60\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"fs-20 bold theme-dark\"\n              placeholder=\"Invoice\"\n              value={invoice.title}\n              onChange={(value) => handleChange('title', value)}\n              pdfMode={pdfMode}\n            />\n\n            <View className=\"flex mb-5 mt-10\" pdfMode={pdfMode}>\n              <View className=\"w-25\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceTitleLabel}\n                  onChange={(value) => handleChange('invoiceTitleLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-75\" pdfMode={pdfMode}>\n                <EditableInput\n                  placeholder=\"INV-M0012\"\n                  value={invoice.invoiceTitle}\n                  onChange={(value) => handleChange('invoiceTitle', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-25\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceDateLabel}\n                  onChange={(value) => handleChange('invoiceDateLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-75\" pdfMode={pdfMode}>\n                <EditableCalendarInput\n                  value={format(invoiceDate, dateFormat)}\n                  selected={invoiceDate}\n                  onChange={(date) =>\n                    handleChange(\n                      'invoiceDate',\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\n                    )\n                  }\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-25\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceDueDateLabel}\n                  onChange={(value) => handleChange('invoiceDueDateLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-75\" pdfMode={pdfMode}>\n                <EditableCalendarInput\n                  value={format(invoiceDueDate, dateFormat)}\n                  selected={invoiceDueDate}\n                  onChange={(date) =>\n                    handleChange(\n                      'invoiceDueDate',\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\n                    )\n                  }\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n\n          </View>\n          <View className=\"w-40 right\" pdfMode={pdfMode}>\n            <EditableFileImage\n              className=\"logo\"\n              placeholder=\"Your Logo\"\n              value={invoice.logo}\n              width={invoice.logoWidth}\n              pdfMode={pdfMode}\n              onChangeImage={(value) => handleChange('logo', value)}\n              onChangeWidth={(value) => handleChange('logoWidth', value)}\n            />\n          </View>\n        </View>\n\n        <View className=\"flex mt-10\" pdfMode={pdfMode}>\n          <View className=\"w-50 bg-theme-light p-10 rad-sm mr-10\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"fs-16 bold theme-dark mb-5\"\n              value={invoice.billBy}\n              onChange={(value) => handleChange('billTo', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              className=\"fs-14 bold\"\n              placeholder=\"Your Company\"\n              value={invoice.companyName}\n              onChange={(value) => handleChange('companyName', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Company's Address\"\n              value={invoice.companyAddress}\n              onChange={(value) => handleChange('companyAddress', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"City, State Zip\"\n              value={invoice.companyAddress2}\n              onChange={(value) => handleChange('companyAddress2', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"GSTIN: \"\n              value={invoice.companyGstin}\n              onChange={(value) => handleChange('companyGstin', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"PAN: \"\n              value={invoice.companyPan}\n              onChange={(value) => handleChange('companyPan', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Email: \"\n              value={invoice.companyEmail}\n              onChange={(value) => handleChange('companyEmail', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Phone: \"\n              value={invoice.companyPhone}\n              onChange={(value) => handleChange('companyPhone', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-50 bg-theme-light p-10 rad-sm\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"fs-16 bold theme-dark mb-5\"\n              value={invoice.billTo}\n              onChange={(value) => handleChange('billTo', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Your Client's Name\"\n              value={invoice.clientName}\n              onChange={(value) => handleChange('clientName', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Client's Address\"\n              value={invoice.clientAddress}\n              onChange={(value) => handleChange('clientAddress', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"City, State Zip\"\n              value={invoice.clientAddress2}\n              onChange={(value) => handleChange('clientAddress2', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              value={invoice.clientGstin}\n              onChange={(value) => handleChange('clientGstin', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              value={invoice.clientPan}\n              onChange={(value) => handleChange('clientPan', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              value={invoice.clientEmail}\n              onChange={(value) => handleChange('clientEmail', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              value={invoice.clientPhone}\n              onChange={(value) => handleChange('clientPhone', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n\n        <View className=\"mt-20 bg-theme-dark flex rad-sm-t\" pdfMode={pdfMode}>\n          <View className=\"w-5 p-4-8\" pdfMode={pdfMode}>\n            <Text></Text>\n          </View>\n          <View className=\"w-48 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold\"\n              value={invoice.productLineDescription}\n              onChange={(value) => handleChange('productLineDescription', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-20 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold center\"\n              value={invoice.productLineDuration}\n              onChange={(value) => handleChange('productLineDuration', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-10 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold center\"\n              value={invoice.productLineHours}\n              onChange={(value) => handleChange('productLineHours', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-10 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold center\"\n              value={invoice.productLineQuantityRate}\n              onChange={(value) => handleChange('productLineQuantityRate', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={invoice.productLineQuantityAmount}\n              onChange={(value) => handleChange('productLineQuantityAmount', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n\n        {invoice.productLines.map((productLine, i) => {\n          const rowColor = i%2 === 0 ? '' : 'bg-theme-light';\n          return pdfMode && productLine.description === '' ? (\n            <Text key={i}></Text>\n          ) : (\n            <View key={i} className={`row flex ${rowColor}`} pdfMode={pdfMode}>\n              <View className=\"w-5 p-4-8\" pdfMode={pdfMode}>\n                <Text key={i} pdfMode={pdfMode}>{(i+1)+\".\"}</Text>\n              </View>\n              <View className=\"w-48 p-4-8\" pdfMode={pdfMode}>\n                <EditableTextarea\n                  className=\"dark\"\n                  placeholder=\"Enter item name/description\"\n                  value={productLine.description}\n                  onChange={(value) => handleProductLineChange(i, 'description', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-20 p-4-8\" pdfMode={pdfMode}>\n                <EditableTextarea\n                  className=\"dark center\"\n                  value={productLine.duration}\n                  onChange={(value) => handleProductLineChange(i, 'duration', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-10 ptb-4\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark center\"\n                  value={productLine.hours}\n                  onChange={(value) => handleProductLineChange(i, 'hours', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-10 ptb-4\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark center\"\n                  value={productLine.rate}\n                  onChange={(value) => handleProductLineChange(i, 'rate', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-17 ptb-4\" pdfMode={pdfMode}>\n                <Text className=\"dark right\" pdfMode={pdfMode}>\n                  {calculateAmount(productLine.hours, productLine.rate)}\n                </Text>\n              </View>\n              {!pdfMode && (\n                <button\n                  className=\"link row__remove\"\n                  aria-label=\"Remove Row\"\n                  title=\"Remove Row\"\n                  onClick={() => handleRemove(i)}\n                >\n                  <span className=\"icon icon-remove bg-red\"></span>\n                </button>\n              )}\n            </View>\n          )\n        })}\n\n        <View className=\"flex\" pdfMode={pdfMode}>\n          <View className=\"w-60\" pdfMode={pdfMode}>\n            <View className=\"mt-10 flex\" pdfMode={pdfMode}>\n              <Text className='' pdfMode={pdfMode}>{invoice.totalWordsLabel + '' + numInWords(\n                  (typeof subTotal !== 'undefined'\n                  ? subTotal\n                  : 0\n                ).toFixed(0)\n              )?.toUpperCase()}</Text>\n            </View>\n            <View className=\"mt-10 donot-print\" pdfMode={pdfMode}>\n              {!pdfMode && (\n                <button className=\"link\" onClick={handleAdd}>\n                  <span className=\"icon icon-add bg-green mr-10\"></span>\n                  Add Line Item\n                </button>\n              )}\n            </View>\n          </View>\n          <View className=\"w-40\" pdfMode={pdfMode}>\n            <View className=\"flex p-5\" pdfMode={pdfMode}>\n              <View className=\"w-40 p-5 bd-t\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold right\"\n                  value={invoice.totalLabel}\n                  onChange={(value) => handleChange('totalLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-60 p-5 bd-t flex\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark bold right\"\n                  value={invoice.currency}\n                  onChange={(value) => handleChange('currency', value)}\n                  pdfMode={pdfMode}\n                />\n                <Text className=\"right bold dark w-auto right\" pdfMode={pdfMode}>\n                  {formatCurrency(typeof subTotal !== 'undefined'\n                    ? subTotal\n                    : 0\n                  )}\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View className=\"mt-20\" pdfMode={pdfMode}>\n          <EditableInput\n            className=\"bold theme-dark w-100\"\n            value={invoice.termLabel}\n            onChange={(value) => handleChange('termLabel', value)}\n            pdfMode={pdfMode}\n          />\n          <EditableTextarea\n            className=\"w-100\"\n            rows={2}\n            value={invoice.term}\n            onChange={(value) => handleChange('term', value)}\n            pdfMode={pdfMode}\n          />\n        </View>\n        <View className=\"mt-10\" pdfMode={pdfMode}>\n          <EditableInput\n            className=\"bold theme-dark w-100\"\n            value={invoice.bankLabel}\n            onChange={(value) => handleChange('termLabel', value)}\n            pdfMode={pdfMode}\n          />\n\n          <View className=\"flex\" pdfMode={pdfMode}>\n            <View className=\"w-17\" pdfMode={pdfMode}>\n              <EditableInput\n                className=\"bold left\"\n                value={invoice.accountNameLabel}\n                onChange={(value) => handleChange('accountNameLabel', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n            <View className=\"w-80\" pdfMode={pdfMode}>\n              <EditableInput\n                className=\"bold left\"\n                value={invoice.accountName}\n                onChange={(value) => handleChange('accountName', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n          </View>\n\n          <View className=\"flex\" pdfMode={pdfMode}>\n            <View className=\"w-17\" pdfMode={pdfMode}>\n              <EditableInput\n                className=\"bold left\"\n                value={invoice.bankNameLabel}\n                onChange={(value) => handleChange('bankNameLabel', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n            <View className=\"w-80\" pdfMode={pdfMode}>\n              <EditableInput\n                className=\"bold left\"\n                value={invoice.bankName}\n                onChange={(value) => handleChange('bankName', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n          </View>\n\n          <View className=\"flex\" pdfMode={pdfMode}>\n            <View className=\"w-17\" pdfMode={pdfMode}>\n              <EditableInput\n                className=\"bold left\"\n                value={invoice.accountNoLabel}\n                onChange={(value) => handleChange('accountNoLabel', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n            <View className=\"w-80\" pdfMode={pdfMode}>\n              <EditableInput\n                className=\"bold left\"\n                value={invoice.accountNo}\n                onChange={(value) => handleChange('accountNo', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n          </View>\n\n          <View className=\"flex\" pdfMode={pdfMode}>\n            <View className=\"w-17\" pdfMode={pdfMode}>\n              <EditableInput\n                className=\"bold left\"\n                value={invoice.bankIfscLabel}\n                onChange={(value) => handleChange('bankIfscLabel', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n            <View className=\"w-80\" pdfMode={pdfMode}>\n              <EditableInput\n                className=\"bold left\"\n                value={invoice.bankIfsc}\n                onChange={(value) => handleChange('bankIfsc', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n          </View>\n          \n        </View>\n        <View className=\"mt-20\" pdfMode={pdfMode}>\n          <EditableTextarea\n            className=\"w-100 center\"\n            rows={2}\n            value={invoice.notes}\n            onChange={(value) => handleChange('notes', value)}\n            pdfMode={pdfMode}\n          />\n        </View>\n        \n      </Page>\n    </Document>\n  )\n}\n\nexport default InvoicePage\n","import React from 'react'\nimport InvoicePage from './components/InvoicePage'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1 className=\"center fs-30\">Invoice Generator</h1>\n      <div id=\"section-to-print\">\n        <InvoicePage />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './scss/main.scss'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}